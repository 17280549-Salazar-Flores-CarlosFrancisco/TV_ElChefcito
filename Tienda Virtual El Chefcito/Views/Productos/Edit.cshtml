@model VistasAct3.Models.Productos

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutCompras.cshtml";
}

<h2>Editar producto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Productos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id_producto)

        <div class="panel panel-success">
            <div class="panel-heading">
                <h4>Productos</h4>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.descripcion, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.existencia, "Existencia", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.existencia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.existencia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.precio_venta, "Precio de venta $", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.precio_venta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.precio_venta, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.stock, "Stock", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.estatus, "Seleccione el estatus", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.estatus, "1")
                            <label for="1">Activo</label>
                            @Html.ValidationMessageFor(model => model.estatus, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-offset-2">
                            @Html.RadioButtonFor(model => model.estatus, "0")
                            <label for="0">Inactivo</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.id_subcategoria, "Subcategoría", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.DropDownList("id_subcategoria", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_subcategoria, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.marca, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.marca, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.marca, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-2">
                            @Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.imagen, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-5 col-md-7">
                        <button type="submit" value="Save" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <div>
        <button class="btn btn-danger"><span class="glyphicon glyphicon-list-alt"></span> <a href="/Productos" style="text-decoration: none; color:white"> Regresar a la lista</a> </button>
    </div>
</div>